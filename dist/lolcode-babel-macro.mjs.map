{"version":3,"file":"lolcode-babel-macro.mjs","sources":["../src/macro.js"],"sourcesContent":["const { createMacro } = require(\"babel-plugin-macros\");\n// const compiler = require(\"./compiler\");\nconst { parser } = require(\"@swizec/loljs\");\n\nmodule.exports = createMacro(myMacro);\n\nfunction myMacro({ references, state, babel }) {\n    references.lolcode.forEach(referencePath => {\n        const compiled = compileLolcode(referencePath);\n        console.log(compiled);\n        referencePath.parentPath.replaceWithSourceString(compiled);\n    });\n}\n\nfunction compileLolcode(referencePath) {\n    const source = referencePath.parentPath.node.quasi.quasis\n        .map(node => node.value.raw)\n        .join(\"\");\n\n    const ast = parser.parse(source);\n    const jsify = new JSify();\n\n    return `function () {\n       ${jsify.compile(ast)} \n    }`;\n}\n\nclass JSify {\n    Body = node => {\n        node.lines = node.lines.map(node => this.compile(node));\n        return \"BODY\";\n    };\n\n    Visible = node => {\n        console.log(node);\n        return \"console.log\";\n    };\n\n    compile = node => {\n        if (this[node._name]) {\n            node = this[node._name];\n        } else {\n            throw new Error(`Not implemented: ${node._name}`);\n        }\n\n        return \"hello\";\n    };\n}\n"],"names":["require","module","exports","createMacro","ref","lolcode","forEach","referencePath","compiled","source","parentPath","node","quasi","quasis","map","value","raw","join","ast","parser","parse","JSify","compile","compileLolcode","console","log","replaceWithSourceString","Body","lines","this","Visible","_name","Error"],"mappings":"MAAwBA,QAAQ,qCAEbA,QAAQ,wBAE3BC,OAAOC,QAAUC,EAEjB,SAAiBC,gBACFC,QAAQC,iBAAQC,OACjBC,EAMd,SAAwBD,OACdE,EAASF,EAAcG,WAAWC,KAAKC,MAAMC,OAC9CC,aAAIH,UAAQA,EAAKI,MAAMC,MACvBC,KAAK,IAEJC,EAAMC,EAAOC,MAAMX,mCACX,IAAIY,GAGPC,QAAQJ,cAfEK,CAAehB,GAChCiB,QAAQC,IAAIjB,GACZD,EAAcG,WAAWgB,wBAAwBlB,OAiBzD,IAAMa,6BACFM,cAAOhB,YACEiB,MAAQjB,EAAKiB,MAAMd,aAAIH,UAAQkB,EAAKP,QAAQX,KAC1C,aAGXmB,iBAAUnB,UACNa,QAAQC,IAAId,GACL,oBAGXW,iBAAUX,OACFkB,EAAKlB,EAAKoB,aAGJ,IAAIC,0BAA0BrB,EAAW,gBAFxCkB,EAAKlB,EAAKoB,OAKd"}