{"version":3,"file":"lolcode-babel-macro.mjs","sources":["../src/macro.js"],"sourcesContent":["const { createMacro } = require(\"babel-plugin-macros\");\n\nmodule.exports = createMacro(myMacro);\n\nfunction myMacro({ references, state, babel }) {\n    references.default.map(referencePath => {\n        if (referencePath.parentPath.type === \"CallExpression\") {\n            requireWebpackCommentImport({ referencePath, state, babel });\n        } else {\n            throw new Error(\n                `This is not supported: \\`${referencePath\n                    .findParent(babel.types.isExpression)\n                    .getSource()}\\`. Please see the webpack-comment-import.macro documentation`\n            );\n        }\n    });\n}\n\nfunction requireWebpackCommentImport({ referencePath, state, babel }) {\n    const t = babel.types;\n    const callExpressionPath = referencePath.parentPath;\n    let webpackCommentImportPath;\n\n    try {\n        webpackCommentImportPath = callExpressionPath\n            .get(\"arguments\")[0]\n            .evaluate().value;\n    } catch (err) {\n        // swallow error, print better error below\n    }\n\n    if (webpackCommentImportPath === undefined) {\n        throw new Error(\n            `There was a problem evaluating the value of the argument for the code: ${callExpressionPath.getSource()}. ` +\n                `If the value is dynamic, please make sure that its value is statically deterministic.`\n        );\n    }\n\n    const webpackCommentImportPathParts = webpackCommentImportPath.split(\"/\");\n    const identifier =\n        webpackCommentImportPathParts[webpackCommentImportPathParts.length - 1];\n\n    referencePath.parentPath.replaceWith(\n        t.callExpression(t.identifier(\"import\"), [\n            t.stringLiteral(webpackCommentImportPath)\n        ])\n    );\n\n    referencePath.parentPath\n        .get(\"arguments\")[0]\n        .addComment(\"leading\", ` webpackChunkName: ${identifier} `);\n}\n"],"names":["require","module","exports","createMacro","ref","default","map","referencePath","parentPath","type","Error","findParent","babel","types","isExpression","getSource","webpackCommentImportPath","t","callExpressionPath","get","evaluate","value","err","undefined","webpackCommentImportPathParts","split","identifier","length","replaceWith","callExpression","stringLiteral","addComment","requireWebpackCommentImport","state"],"mappings":"MAAwBA,QAAQ,uBAEhCC,OAAOC,SAAUC,iBAEjB,SAAiBC,wCACFC,QAAQC,aAAIC,MACmB,mBAAlCA,EAAcC,WAAWC,WAGnB,IAAIC,iCACsBH,EACvBI,WAAWC,EAAMC,MAAMC,cACvBC,6EAMrB,SAAqCX,OAG7BY,oBAFEC,UAAUJ,MACVK,EAAqBX,EAAcC,eAIrCQ,EAA2BE,EACtBC,IAAI,aAAa,GACjBC,WAAWC,MAClB,MAAOC,YAIwBC,IAA7BP,QACM,IAAIN,MACL,0EAAyEQ,EAAmBH,2GAK/FS,EAAgCR,EAAyBS,MAAM,KAC/DC,EACFF,EAA8BA,EAA8BG,OAAS,GAEzEpB,EAAcC,WAAWoB,YACrBX,EAAEY,eAAeZ,EAAES,WAAW,UAAW,CACrCT,EAAEa,cAAcd,MAIxBT,EAAcC,WACTW,IAAI,aAAa,GACjBY,WAAW,gCAAiCL,OA3CzCM,CAA4B,eAAEzB,QAAe0B,QAAOrB"}