{"version":3,"file":"lolcode-babel-macro.umd.js","sources":["../src/macro.js"],"sourcesContent":["const { createMacro } = require(\"babel-plugin-macros\");\nconst { parser } = require(\"@swizec/loljs\");\nconst JSify = require(\"./JSify\");\nconst lolstdlib = require(\"./lolstdlib\");\n\nmodule.exports = createMacro(myMacro);\nmodule.exports.stdlib = lolstdlib;\n\nfunction myMacro({ references, state, babel }) {\n    references.lolcode.forEach(referencePath => {\n        const compiled = compileLolcode(referencePath);\n\n        console.log(compiled);\n        referencePath.parentPath.replaceWithSourceString(compiled);\n    });\n}\n\nfunction compileLolcode(referencePath) {\n    const source = referencePath.parentPath.node.quasi.quasis\n        .map(node => node.value.raw)\n        .join(\"\");\n\n    const ast = parser.parse(source);\n    const jsify = new JSify();\n\n    return `function () {\n       ${jsify.compile(ast)} \n    }`;\n}\n"],"names":["require","JSify","lolstdlib","module","exports","createMacro","ref","lolcode","forEach","referencePath","compiled","source","parentPath","node","quasi","quasis","map","value","raw","join","ast","parser","parse","compile","compileLolcode","console","log","replaceWithSourceString","stdlib"],"mappings":"gJAAwBA,QAAQ,qCACbA,QAAQ,wBACrBC,EAAQD,QAAQ,WAChBE,EAAYF,QAAQ,eAE1BG,OAAOC,QAAUC,EAGjB,SAAiBC,gBACFC,QAAQC,iBAAQC,OACjBC,EAOd,SAAwBD,OACdE,EAASF,EAAcG,WAAWC,KAAKC,MAAMC,OAC9CC,aAAIH,UAAQA,EAAKI,MAAMC,MACvBC,KAAK,IAEJC,EAAMC,EAAOC,MAAMX,mCACX,IAAIV,GAGPsB,QAAQH,cAhBEI,CAAef,GAEhCgB,QAAQC,IAAIhB,GACZD,EAAcG,WAAWe,wBAAwBjB,OAPzDP,OAAOC,QAAQwB,OAAS1B"}