{"version":3,"file":"lolcode-babel-macro.js","sources":["../src/lolstdlib.js","../src/JSify.js","../src/macro.js"],"sourcesContent":["/**\n * LOLCODE built in functions.\n */\nexport default {\n    NOT: function(a) {\n        return !a;\n    },\n    \"ANY OF\": function(var_args) {\n        var args = lol.utils.argsArray(arguments);\n        for (var i = 0; i < args.length; i++) {\n            if (args[i]) {\n                return true;\n            }\n        }\n        return false;\n    },\n    \"BIGGR OF\": function(a, b) {\n        return Math.max(a, b);\n    },\n    \"SMALLR OF\": function(a, b) {\n        return Math.min(a, b);\n    },\n    \"SUM OF\": function(a, b) {\n        return a + b;\n    },\n    \"DIFF OF\": function(a, b) {\n        return a - b;\n    },\n    \"PRODUKT OF\": function(a, b) {\n        return a * b;\n    },\n    \"QUOSHUNT OF\": function(a, b) {\n        return a / b;\n    },\n    \"BOTH OF\": function(a, b) {\n        return a && b;\n    },\n    \"EITHER OF\": function(a, b) {\n        return a || b;\n    },\n    \"BOTH SAEM\": function(a, b) {\n        return a === b;\n    },\n    SMOOSH: function(var_args) {\n        var args = lol.utils.argsArray(arguments);\n        return lol.utils.toYarn(\n            args.reduce(function(a, b) {\n                return lol.utils.toYarn(a) + lol.utils.toYarn(b);\n            })\n        );\n    },\n    \"BIGGR THAN\": function(a, b) {\n        return a > b;\n    },\n    \"SMALLR THAN\": function(a, b) {\n        return a < b;\n    },\n    \"MOD OF\": function(a, b) {\n        return a % b;\n    },\n    \"LEN OF\": function(a) {\n        return a && typeof a.length !== \"undefined\" ? a.length : null;\n    },\n    \"ORD OF\": function(a) {\n        return a && a.charCodeAt ? a.charCodeAt(0) : -1;\n    },\n    \"CHR OF\": function(a) {\n        return String.fromCharCode(a);\n    }\n};\n","import stdlib from \"./lolstdlib\";\n\nclass JSify {\n    Assignment = node => {\n        return `${node.name} = ${this.compile(node.value)}`;\n    };\n\n    ArgList = node => {\n        return node.values.map(this.compile).join(\", \");\n    };\n\n    Body = node => {\n        node.lines = node.lines.map(node => this.compile(node));\n        return node.lines.join(\"\\n\");\n    };\n\n    Declaration = node => {\n        let value = \"null\";\n\n        if (node.value !== null) {\n            value = this.compile(node.value);\n        }\n\n        return `let ${node.name} = ${value};`;\n    };\n\n    FunctionCall = node => {\n        if (stdlib[node.name]) {\n            return `lolcode.stdlib[\"${node.name}\"](${this.compile(node.args)})`;\n        } else {\n            return `${node.name}(${this.compile(node.args)})`;\n        }\n    };\n\n    FunctionDefinition = node => {\n        return `function ${node.name}(${node.args.join(\", \").toLowerCase()}) {\n            ${this.compile(node.body)}\n        }`;\n    };\n\n    Return = node => {\n        return `return ${this.compile(node.expression)}`;\n    };\n\n    Identifier = node => {\n        return node.name.toLowerCase();\n    };\n\n    If = node => {\n        return `if (${name.condition}) {\n            ${this.compile(node.body)}\n        }else{\n            ${this.compile(node.elseBody)}\n        }`;\n    };\n\n    Visible = node => {\n        return `console.log(${this.compile(node.expression)})`;\n    };\n\n    Literal = node => {\n        if (typeof node.value === \"string\") {\n            return `\"${node.value}\"`;\n        } else {\n            return node.value;\n        }\n    };\n\n    compile = node => {\n        if (this[node._name]) {\n            node = this[node._name](node);\n        } else {\n            throw new Error(`Not implemented: ${node._name}`);\n        }\n\n        return node;\n    };\n}\n\nexport default JSify;\n","import { createMacro } from \"babel-plugin-macros\";\nimport { parser } from \"@swizec/loljs\";\nimport JSify from \"./JSify\";\n\nfunction myMacro({ references, state, babel }) {\n    references.lolcode.forEach(referencePath => {\n        const compiled = compileLolcode(referencePath);\n\n        console.log(compiled);\n        referencePath.parentPath.replaceWithSourceString(compiled);\n    });\n}\n\nfunction compileLolcode(referencePath) {\n    const source = referencePath.parentPath.node.quasi.quasis\n        .map(node => node.value.raw)\n        .join(\"\");\n\n    const ast = parser.parse(source);\n    const jsify = new JSify();\n\n    return `function () {\n       ${jsify.compile(ast)} \n    }`;\n}\n\nexport default createMacro(myMacro);\n"],"names":["NOT","a","var_args","args","lol","utils","argsArray","arguments","i","length","b","Math","max","min","SMOOSH","toYarn","reduce","charCodeAt","String","fromCharCode","JSify","Assignment","node","this","compile","value","ArgList","values","map","join","Body","lines","Declaration","FunctionCall","stdlib","name","FunctionDefinition","toLowerCase","body","Return","expression","Identifier","If","elseBody","Visible","Literal","_name","Error","babelPluginMacros","ref","lolcode","forEach","referencePath","compiled","source","parentPath","quasi","quasis","raw","ast","parser","parse","compileLolcode","console","log","replaceWithSourceString"],"mappings":"kEAGe,CACXA,IAAK,SAASC,UACFA,YAEF,SAASC,WACXC,EAAOC,IAAIC,MAAMC,UAAUC,WACtBC,EAAI,EAAGA,EAAIL,EAAKM,OAAQD,OACzBL,EAAKK,UACE,SAGR,cAEC,SAASP,EAAGS,UACbC,KAAKC,IAAIX,EAAGS,gBAEV,SAAST,EAAGS,UACdC,KAAKE,IAAIZ,EAAGS,aAEb,SAAST,EAAGS,UACXT,EAAIS,aAEJ,SAAST,EAAGS,UACZT,EAAIS,gBAED,SAAST,EAAGS,UACfT,EAAIS,iBAEA,SAAST,EAAGS,UAChBT,EAAIS,aAEJ,SAAST,EAAGS,UACZT,GAAKS,eAEH,SAAST,EAAGS,UACdT,GAAKS,eAEH,SAAST,EAAGS,UACdT,IAAMS,GAEjBI,OAAQ,SAASZ,OACTC,EAAOC,IAAIC,MAAMC,UAAUC,kBACxBH,IAAIC,MAAMU,OACbZ,EAAKa,OAAO,SAASf,EAAGS,UACbN,IAAIC,MAAMU,OAAOd,GAAKG,IAAIC,MAAMU,OAAOL,oBAI5C,SAAST,EAAGS,UACfT,EAAIS,iBAEA,SAAST,EAAGS,UAChBT,EAAIS,YAEL,SAAST,EAAGS,UACXT,EAAIS,YAEL,SAAST,UACRA,QAAyB,IAAbA,EAAEQ,OAAyBR,EAAEQ,OAAS,eAEnD,SAASR,UACRA,GAAKA,EAAEgB,WAAahB,EAAEgB,WAAW,IAAM,YAExC,SAAShB,UACRiB,OAAOC,aAAalB,KCjE7BmB,6BACFC,oBAAaC,UACCA,aAAeC,EAAKC,QAAQF,EAAKG,aAG/CC,iBAAUJ,UACCA,EAAKK,OAAOC,IAAIL,EAAKC,SAASK,KAAK,YAG9CC,cAAOR,YACES,MAAQT,EAAKS,MAAMH,aAAIN,UAAQC,EAAKC,QAAQF,KAC1CA,EAAKS,MAAMF,KAAK,YAG3BG,qBAAcV,OACNG,EAAQ,cAEO,OAAfH,EAAKG,UACGF,EAAKC,QAAQF,EAAKG,eAGhBH,aAAeG,YAGjCQ,sBAAeX,UACPY,EAAOZ,EAAKa,yBACcb,aAAeC,EAAKC,QAAQF,EAAKnB,UAEjDmB,WAAaC,EAAKC,QAAQF,EAAKnB,gBAIjDiC,4BAAqBd,qBACEA,WAAaA,EAAKnB,KAAK0B,KAAK,MAAMQ,kCAC/Cd,EAAKC,QAAQF,EAAKgB,0BAI5BC,gBAASjB,mBACYC,EAAKC,QAAQF,EAAKkB,kBAGvCC,oBAAanB,UACFA,EAAKa,KAAKE,oBAGrBK,YAAKpB,gBACaa,mCACRZ,EAAKC,QAAQF,EAAKgB,uCAElBf,EAAKC,QAAQF,EAAKqB,8BAI5BC,iBAAUtB,wBACgBC,EAAKC,QAAQF,EAAKkB,sBAG5CK,iBAAUvB,SACoB,iBAAfA,EAAKG,UACDH,YAEJA,EAAKG,YAIpBD,iBAAUF,OACFC,EAAKD,EAAKwB,aAGJ,IAAIC,0BAA0BzB,EAAW,cAFxCC,EAAKD,EAAKwB,OAAOxB,KC5CpC0B,cAtBA,SAAiBC,gBACFC,QAAQC,iBAAQC,OACjBC,EAOd,SAAwBD,OACdE,EAASF,EAAcG,WAAWjC,KAAKkC,MAAMC,OAC9C7B,aAAIN,UAAQA,EAAKG,MAAMiC,MACvB7B,KAAK,IAEJ8B,EAAMC,SAAOC,MAAMP,mCACX,IAAIlC,GAGPI,QAAQmC,cAhBEG,CAAeV,GAEhCW,QAAQC,IAAIX,GACZD,EAAcG,WAAWU,wBAAwBZ"}